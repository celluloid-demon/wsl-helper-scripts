#!/bin/bash

# Exit on error
set -eE

# Declare constants
WRAPPER="plasma-wrapper"
LOCAL_BIN="${HOME}/.local/bin"
RESOURCES="./resources.plasma"

# User-defined internal switches

# Valid distros:
#   UBUNTU_WSL
OS=FEDORA_WSL

# Initialize flags with default values
FLAG_plasma_installed=0
FLAG_plasma_wrapper_installed=0
FLAG_plasma_configured=0
FLAG_restart_required=0

update_packages() {

    if [ $OS = FEDORA_WSL ]; then

        sudo dnf upgrade -y

    elif [ $OS = UBUNTU_WSL ]; then

        sudo apt update
        sudo apt upgrade -y

    fi

}

flash_plasma() {

    set +eE

    if which startplasma-x11; then

        FLAG_plasma_installed=1

    fi

    set -eE

    # (prevent redundant run of dnf)

    if [ $FLAG_plasma_installed -eq 1 ]; then

        do_nothing=

    elif [ $OS = FEDORA_WSL ]; then

        # sudo dnf groupinstall -y "KDE Plasma Workspace" # note: doesn't work with f37?
        sudo dnf groupinstall -y "KDE Plasma Workspace"

    elif [ $OS = UBUNTU_WSL ]; then

        sudo apt install -y xubuntu-desktop

    fi

}

flash_plasma_wrapper() {

    # todo enforce working directory so this actually PORTABLE ; can run from project-root as './linux_endpoint/res...'

    [ -f "${LOCAL_BIN}/${WRAPPER}" ] && $FLAG_plasma_wrapper_installed=1

    if [ $FLAG_plasma_wrapper_installed -eq 1 ]; then

        do_nothing=

    elif [ $OS = FEDORA_WSL ] || [ $OS = UBUNTU_WSL ]; then

        cp "${RESOURCES}/${WRAPPER}" "${LOCAL_BIN}/"

        FLAG_restart_required=1

    fi

}

configure_lightdm() {

    lightdm_conf="/etc/lightdm/lightdm.conf"

    sddm_status=$(systemctl is-enabled sddm)
    lightdm_status=$(systemctl is-enabled lightdm)

    [ $sddm_status    = enabled  ] && sudo systemctl disable sddm    && $FLAG_restart_required=1
    [ $lightdm_status = disabled ] && sudo systemctl enable  lightdm && $FLAG_restart_required=1

    # todo install logic for /etc/lightdm/lightdm.conf...

    [ ! grep -q '^user-session=plasma$'      "$lightdm_conf" ] && sed -i '/^\[Seat:\*\]/a user-session=plasma'      "$lightdm_conf" && $FLAG_restart_required=1
    [ ! grep -q '^start-default-seat=false$' "$lightdm_conf" ] && sed -i '/^\[LightDM\]/a start-default-seat=false' "$lightdm_conf" && $FLAG_restart_required=1
    [ ! grep -q '^enabled=true$'             "$lightdm_conf" ] && sed -i '/^\[XDMCPServer\]/a enabled=true'         "$lightdm_conf" && $FLAG_restart_required=1
    [ ! grep -q '^port=177$'                 "$lightdm_conf" ] && sed -i '/^\[XDMCPServer\]/a port=177'             "$lightdm_conf" && $FLAG_restart_required=1

}

exit_zero() {

    if [ $FLAG_restart_required -eq 1 ]; then

        echo
        echo "  RESTART HIGHLY RECOMMENDED"
        echo

    fi

}

main() {

    update_packages

    flash_plasma

    flash_plasma_wrapper

    configure_lightdm

    exit_zero

}

main
